name: CD

on:
  push:
    tags:
      - '*'

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
      # JDK needed for dynamically linked libraries for JMX
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build
        run: cargo build
      - name: Prepare libjvm.dylib for MacOS
        if: matrix.os == 'macos-latest'
        run: sudo ln -s $(/usr/libexec/java_home)/lib/server/libjvm.dylib /usr/local/lib
      - name: Run tests
        run: cargo test
      - name: Setup MUSL
        if: matrix.os == 'ubuntu-latest'
        run: |
          rustup target add x86_64-unknown-linux-musl
          sudo apt-get -qq install musl-tools

      - name: Build Release Mac
        if: matrix.os == 'macos-latest'
        run: make release-mac
      - name: Build Release Linux
        if: matrix.os == 'ubuntu-latest'
        run: make release-linux-musl
      - name: Build Release Win
        if: matrix.os == 'windows-latest'
        run: make release-win

      - name: Set SHA
        if: matrix.os == 'macos-latest'
        id: shasum
        run: |
          echo ::set-output name=sha::"$(shasum -a 256 ./release/panopticon-tui-mac.tar.gz | awk '{printf $1}')"

      - name: Extract release notes
        if: matrix.os == 'ubuntu-latest'
        id: release_notes
        uses: ffurrer2/extract-release-notes@v1
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
          prerelease: true
          files: |
            ./release/*.tar.gz
            ./release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# TBD Brew
